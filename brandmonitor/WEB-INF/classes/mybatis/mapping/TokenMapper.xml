<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trademark.dao.TokenMapper" >
  <resultMap id="BaseResultMap" type="com.trademark.pojo.Token" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="staff_code" property="staffCode" jdbcType="VARCHAR" />
    <result column="validity_time" property="validityTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, token, staff_code, validity_time, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from k_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="com.trademark.pojo.Token" >
    select 
    <include refid="Base_Column_List" />
    from k_token
    <where>
       1 = 1
       <if test="id != null">
       and id = #{id,jdbcType=INTEGER}
       </if>
       <if test="token != null" >
        and token = #{token,jdbcType=VARCHAR}
      </if>
      <if test="staffCode != null" >
        and staff_code = #{staffCode,jdbcType=VARCHAR}
      </if>
      <if test="validityTime != null" >
        and validity_time = #{validityTime,jdbcType=TIMESTAMP}
      </if>
      <if test="createTime != null" >
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    order by create_time desc
    <if test="start != null and end != null">
      limit #{start},#{end}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from k_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.trademark.pojo.Token" >
    insert into k_token (id, token, staff_code, 
      validity_time, create_time)
    values (#{id,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, #{staffCode,jdbcType=VARCHAR}, 
      #{validityTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.trademark.pojo.Token" >
    insert into k_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="staffCode != null" >
        staff_code,
      </if>
      <if test="validityTime != null" >
        validity_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="staffCode != null" >
        #{staffCode,jdbcType=VARCHAR},
      </if>
      <if test="validityTime != null" >
        #{validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trademark.pojo.Token" >
    update k_token
    <set >
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="staffCode != null" >
        staff_code = #{staffCode,jdbcType=VARCHAR},
      </if>
      <if test="validityTime != null" >
        validity_time = #{validityTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trademark.pojo.Token" >
    update k_token
    set token = #{token,jdbcType=VARCHAR},
      staff_code = #{staffCode,jdbcType=VARCHAR},
      validity_time = #{validityTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>