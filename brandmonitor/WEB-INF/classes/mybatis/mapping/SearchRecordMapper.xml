<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trademark.dao.SearchRecordMapper" >
  <resultMap id="BaseResultMap" type="com.trademark.pojo.SearchRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="is_invalid" property="isInvalid" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="user" property="user" jdbcType="INTEGER" />
    <result column="search_type" property="searchType" jdbcType="INTEGER" />
    <result column="search_type_two" property="searchTypeTwo" jdbcType="INTEGER" />
    <result column="search_content" property="searchContent" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, is_invalid, create_time, user, search_type, search_type_two, search_content, 
    product_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from k_search_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from k_search_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.trademark.pojo.SearchRecord" >
    insert into k_search_record (id, is_invalid, create_time, 
      user, search_type, search_type_two, 
      search_content, product_name)
    values (#{id,jdbcType=INTEGER}, #{isInvalid,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{user,jdbcType=INTEGER}, #{searchType,jdbcType=INTEGER}, #{searchTypeTwo,jdbcType=INTEGER}, 
      #{searchContent,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.trademark.pojo.SearchRecord" >
    insert into k_search_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      
      <if test="user != null" >
        user,
      </if>
      <if test="searchType != null" >
        search_type,
      </if>
      <if test="searchTypeTwo != null" >
        search_type_two,
      </if>
      <if test="searchContent != null" >
        search_content,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
     
      <if test="user != null" >
        #{user,jdbcType=INTEGER},
      </if>
      <if test="searchType != null" >
        #{searchType,jdbcType=INTEGER},
      </if>
      <if test="searchTypeTwo != null" >
        #{searchTypeTwo,jdbcType=INTEGER},
      </if>
      <if test="searchContent != null" >
        #{searchContent,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trademark.pojo.SearchRecord" >
    update k_search_record
    <set >
      <if test="isInvalid != null" >
        is_invalid = #{isInvalid,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null" >
        user = #{user,jdbcType=INTEGER},
      </if>
      <if test="searchType != null" >
        search_type = #{searchType,jdbcType=INTEGER},
      </if>
      <if test="searchTypeTwo != null" >
        search_type_two = #{searchTypeTwo,jdbcType=INTEGER},
      </if>
      <if test="searchContent != null" >
        search_content = #{searchContent,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trademark.pojo.SearchRecord" >
    update k_search_record
    set is_invalid = #{isInvalid,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user = #{user,jdbcType=INTEGER},
      search_type = #{searchType,jdbcType=INTEGER},
      search_type_two = #{searchTypeTwo,jdbcType=INTEGER},
      search_content = #{searchContent,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>